version: '3.8'

services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/.env:/var/www/.env
    environment:
      - APP_ENV=local
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app-network        

  node:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend
    container_name: frontend
    ports:
    - "3000:3000"
    restart: unless-stopped
    working_dir: /var/www/frontend
    volumes:
      - ./frontend:/var/www/frontend
      - /var/www/frontend/node_modules
    networks:
      - app-network

  db:
    image: postgres:16
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=employeedb
    volumes:
      - ./docker/postgres:/var/lib/pgsql
    networks:
      - app-network
    expose:
      - "5432"  
    ports:
      - "5433:5432"

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local